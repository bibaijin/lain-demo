# vim: ft=ansible:
---
- hosts: all
  remote_user: vagrant
  become: yes
  become_user: root

  vars:
    - tinydns_container_name: tinydns.worker.worker.v0-i1-d0
    - webrouter_cointainer_name: webrouter.worker.worker.v0-i1-d0
    - registry_container_name: registry.web.web.v0-i1-d0
    - console_container_name: console.web.web.v0-i1-d0

  tasks:

  - name: Ensure FORWARD chain policy is ACCEPT
    command: iptables -P FORWARD ACCEPT

  - name: Ensure INPUT chain policy is ACCEPT
    command: iptables -P INPUT ACCEPT

  - name: Ensure dnsmasq in resolv.conf
    lineinfile: dest=/etc/resolv.conf line='nameserver 127.0.0.1' insertbefore=BOF

  - name: Ensure health statuses of vital services
    service: name={{ item }} state=restarted
    with_items:
      - etcd
      - lainlet
      - networkd

  - name: Bring auxiliary containers back to life, if I can
    command: docker start {{ item }}
    with_items:
      - "{{ tinydns_container_name }}"
      - "{{ webrouter_cointainer_name }}"
      - "{{ registry_container_name }}"
      - "{{ console_container_name }}"
    ignore_errors: True

  - name: Bring deployd back to life
    service: name=deployd state=started

  - name: ""
    debug: msg="Recovery operation finished, deployd will bring remaining containers (if any) back to life one by one, check `docker ps -a` for progress."
...
